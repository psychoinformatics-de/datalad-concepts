# Populate type-designator slots from graph
# (for inlined blank-nodes -- but actuallu unclear how the issue reaches).
#
# Example of a record it could not handle without this patch (failing to
# encode `IssuedIdentifier` being the actual type of the identifier.
#
# @prefix dlidentifiers: <https://concepts.datalad.org/s/identifiers/unreleased/> .
# @prefix dlsocial: <https://concepts.datalad.org/s/social/unreleased/> .
# @prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
#
# <https://trr379.de/contributors/michael-hanke> a dlsocial:Person ;
#     dlidentifiers:identifier [ a dlidentifiers:IssuedIdentifier ;
#             dlidentifiers:creator "https://orcid.org"^^xsd:anyURI ;
#             dlidentifiers:notation "0000-0001-6398-6370" ;
#             dlidentifiers:schema_agency "Open Researcher and Contributor ID organization" ] ;
#     dlsocial:given_name "Michael" ;
#
--- rdflib_loader.py      2025-02-10 01:09:21.627350190 +0100
+++ rdflib_loader.py      2025-02-10 01:10:15.593488451 +0100
@@ -106,6 +106,8 @@
                         raise ValueError(f'Ambiguous types for {subject} == {type_classes}')
                     logger.info(f'Replacing {subject_class} with {type_classes}')
                     subject_class = type_classes[0].name
+                    if type_classes[0].class_uri is not None:
+                       dict_obj[type_designator_slot.name] = type_classes[0].class_uri
             # process all triples for this node
             for (_, p, o) in graph.triples((subject, None, None)):
                 processed_triples.add((subject,p,o))
